name: push make 6088 docker bin
on:
  # schedule:
  #   - cron: '00 20 * * *'
  push:
    paths:
        - '6088/**'
  workflow_dispatch:
    inputs:
      BAND_NAME:
        description: 'The name of the band'
        required: false
        default: ''
      BAND_NAME_ADDMAC:
        description: 'if MAC for the band'
        required: false
        default: ''
      BAND_SSID:
        description: 'SSID of the band'
        required: false
        default: ''
      BAND_ROOT_PASS:
        description: 'Password for the root'
        required: false
        default: ''
      BAND_WLAN_PASS:
        description: 'Password for the wifi'
        required: false
        default: ''
      PASS_PUBKEY:
        description: 'Password PASS_PUBKEY if need'
        required: false
        default: ''
      BAND_CIDR:
        description: 'CIDR for the band'
        required: false
        default: ''
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize Build Space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 5120
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
      - name: Free Disk Space
        uses: endersonmenezes/free-disk-space@main
        with:
          remove_android: true
          remove_dotnet: true
          remove_haskell: true
          remove_tool_cache: true
          remove_swap: true
          remove_packages: "android* azure* clang* dotnet* firefox* ghc* golang* google* libclang* libgl1* lld* llvm* \
            microsoft* mongodb* mono* mysql* nodejs* openjdk* php* postgresql* powershell* snap* temurin* yarn* zulu*"
          remove_packages_one_command: true
          remove_folders: "/etc/apt/sources.list.d* /etc/mono* /etc/mysql* /usr/include/linux/android* /usr/lib/llvm* /usr/lib/mono* \
            /usr/local/lib/android* /usr/local/lib/node_modules* /usr/local/share/chromium* /usr/local/share/powershell* \
            /usr/local/share/vcpkg/ports/azure* /usr/local/share/vcpkg/ports/google* /usr/local/share/vcpkg/ports/libpq/android* \
            /usr/local/share/vcpkg/ports/llvm* /usr/local/share/vcpkg/ports/mysql* /usr/local/share/vcpkg/ports/snap* \
            /usr/share/azure* /usr/share/dotnet* /usr/share/glade* /usr/share/miniconda* /usr/share/php* /usr/share/swift \
            /var/lib/mysql* /opt/hostedtoolcache/* /var/log/azure*"
          testing: false
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Write variables to band.txt (7986)
        run: |
          echo "BAND_NAME=${{ github.event.inputs.BAND_NAME }}" > band.txt
          echo "BAND_NAME_ADDMAC=${{ github.event.inputs.BAND_NAME_ADDMAC }}" >> band.txt
          echo "BAND_SSID=${{ github.event.inputs.BAND_SSID }}" >> band.txt
          echo "BAND_ROOT_PASS=${{ github.event.inputs.BAND_ROOT_PASS }}" >> band.txt
          echo "BAND_WLAN_PASS=${{ github.event.inputs.BAND_WLAN_PASS }}" >> band.txt
          echo "::add-mask::${{ github.event.inputs.PASS_PUBKEY }}"
          echo "PASS_PUBKEY=${{ github.event.inputs.PASS_PUBKEY }}" >> band.txt
          echo "BAND_CIDR=${{ github.event.inputs.BAND_CIDR }}" >> band.txt
          echo "CHIP=7986" >> band.txt
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        run: cp band.txt 6088/ && bash 6088/6088build.sh
      - name: cp bin
        run: df -h && docker run -d --name 6088 sliamb/opbuilder:6088 && docker cp 6088:/data/6088.7z .
      - name: Upload bin
        uses: actions/upload-artifact@v4
        with:
            name: 6088.7z
            path: 6088.7z